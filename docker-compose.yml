version: '3.9'
services:
  app:
    build: .
    environment:
      - NODE_ENV=production
      - APP_PORT=${APP_PORT}
      - DB_HOST=db-postgres
      - DB_USER=${DB_USER}
      - BD_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db-postgres
      - redis
    networks:
      - db-network
      - redis-network

  db-postgres:
    image: postgres:latest
    volumes: 
      - "./db/postgres:/var/lib/postgresql/data"
    ports:
      - "${DB_PORT}:5432"
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - db-network

  redis:
    image: redis:latest
    container_name: redis
    command: >
      redis-server "user ${REDIS_USER} on >${REDIS_PASS} ~* +@all"
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    networks:
      - redis-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOST=redis
      - REDIS_PASS=${REDIS_PASS}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: always
    networks:
      - redis-network

networks:
  db-network:
  redis-network: